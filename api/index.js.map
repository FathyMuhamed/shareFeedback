{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "D:\\code\\projects\\shareFeadback\\shareFeedback\\app\\root.tsx", "D:\\code\\projects\\shareFeadback\\shareFeedback\\app\\routes\\about.tsx", "D:\\code\\projects\\shareFeadback\\shareFeedback\\app\\routes\\index.tsx", "../app/utils/auth.server.ts", "../app/utils/prisma.server.ts", "../app/utils/users.server.ts", "D:\\code\\projects\\shareFeadback\\shareFeedback\\app\\routes\\login.tsx", "../app/components/layout.tsx", "../app/utils/validators.server.ts", "../app/components/form-field.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport styles from \"./styles/app.css\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Share Feedback\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }];\n}\n\nexport default function App() {\n  return (\n    <html lang='en'>\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "export default function about() {\r\n    return <div>about</div>;\r\n}\r\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { requireUserId } from \"~/utils/auth.server\";\n\nexport const loader: LoaderFunction = async ({ request }: any) => {\n  await requireUserId(request);\n  return null;\n};\nexport default function home() {\n  return (\n    <div className='flex items-center justify-center h-screen '>\n      <h1 className='text-2xl font-bold text-red-800'>\n        Welcome to Remix + Prisma.\n      </h1>\n    </div>\n  );\n}\n", "import type { Request } from \"@remix-run/node\";\r\nimport { createCookieSessionStorage, json, redirect } from \"@remix-run/node\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nimport { db } from \"./prisma.server\";\r\nimport { createUser } from \"./users.server\";\r\n\r\nimport type { LoginForm, RegisterForm } from \"./types.server\";\r\n\r\n//NOTE: Crate Cookies and session\r\nconst sessionSecret = process.env.SESSION_SECRET;\r\nif (!sessionSecret) {\r\n  throw new Error(\"SESSION_SECRET must be set\");\r\n}\r\nconst storage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"share-session\",\r\n    secure: process.env.NODE_ENV === \"production\",\r\n    secrets: [sessionSecret],\r\n    sameSite: \"lax\",\r\n    path: \"/\",\r\n    maxAge: 60 * 60 * 24 * 30,\r\n    httpOnly: true,\r\n  },\r\n});\r\n\r\nexport async function createUserSession(userId: string, redirectTo: string) {\r\n  const session = await storage.getSession();\r\n  session.set(\"userId\", userId);\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await storage.commitSession(session),\r\n    },\r\n  });\r\n}\r\n\r\n//NOTE: Register function\r\nexport async function register(user: RegisterForm) {\r\n  const exists = await db.user.count({\r\n    where: { email: user.email },\r\n  });\r\n  if (exists) {\r\n    return json(\r\n      { error: `User already exists with that email` },\r\n      { status: 400 }\r\n    );\r\n  }\r\n  const newuser = await createUser(user);\r\n  if (!newuser) {\r\n    return json(\r\n      {\r\n        error: `Something went wrong trying to create a new user.`,\r\n        fields: { email: user.email, password: user.password },\r\n      },\r\n      { status: 400 }\r\n    );\r\n  }\r\n  return createUserSession(newuser.id, \"/\");\r\n}\r\n//NOTE: Login function\r\nexport async function login({ email, password }: LoginForm) {\r\n  const user = await db.user.findUnique({\r\n    where: { email },\r\n  });\r\n  if (!user || !(await bcrypt.compare(password, user.password))) {\r\n    return json({ error: `Incorrect login` }, { status: 400 });\r\n  }\r\n  return createUserSession(user.id, \"/\");\r\n}\r\n\r\nexport async function logout(request: Request) {\r\n  const session = await getUserSession(request);\r\n  return redirect(\"/login\", {\r\n    headers: {\r\n      \"Set-Cookie\": await storage.destroySession(session),\r\n    },\r\n  });\r\n}\r\n//NOTE: helper function\r\n\r\nexport async function requireUserId(\r\n  request: Request,\r\n  redirectTo: string = new URL(request.url).pathname\r\n) {\r\n  const session = await getUserSession(request);\r\n  const userId = session.get(\"userId\");\r\n  if (!userId || typeof userId !== \"string\") {\r\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\r\n    throw redirect(`/login?${searchParams}`);\r\n  }\r\n  return userId;\r\n}\r\n\r\nfunction getUserSession(request: Request) {\r\n  return storage.getSession(request.headers.get(\"Cookie\"));\r\n}\r\nexport async function getUserId(request: Request) {\r\n  const session = await getUserSession(request);\r\n  const userId = session.get(\"userId\");\r\n  if (!userId || typeof userId !== \"string\") return null;\r\n  return userId;\r\n}\r\nexport async function getUser(request: Request) {\r\n  const userId = await getUserId(request);\r\n  if (typeof userId !== \"string\") {\r\n    return null;\r\n  }\r\n  try {\r\n    const user = await db.user.findUnique({\r\n      where: { id: userId },\r\n      select: { id: true, email: true, profile: true },\r\n    });\r\n    return user;\r\n  } catch {\r\n    throw logout(request);\r\n  }\r\n}\r\n", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nlet db: PrismaClient;\r\ndeclare global {\r\n  var __db: PrismaClient | undefined;\r\n}\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  db = new PrismaClient();\r\n  db.$connect();\r\n} else {\r\n  if (!global.__db) {\r\n    global.__db = new PrismaClient();\r\n    global.__db.$connect();\r\n  }\r\n  db = global.__db;\r\n}\r\n\r\nexport { db };\r\n", "import bcrypt from \"bcryptjs\";\r\nimport type { RegisterForm } from \"./types.server\";\r\nimport { db } from \"./prisma.server\";\r\nexport async function createUser(user: RegisterForm) {\r\n  const passwordHash = await bcrypt.hash(user.password, 10);\r\n  const newUser = await db.user.create({\r\n    data: {\r\n      email: user.email,\r\n      password: passwordHash,\r\n      profile: {\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n      },\r\n    },\r\n  });\r\n  return { id: newUser.id, email: user.email };\r\n}\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { redirect, Request } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useState } from \"react\";\r\nimport Layout from \"~/components/layout\";\r\nimport { getUser, login, register } from \"~/utils/auth.server\";\r\nimport {\r\n  validateEmail,\r\n  validateName,\r\n  validatePassword,\r\n} from \"~/utils/validators.server\";\r\nimport FormField from \"./../components/form-field\";\r\n\r\nconst styles = {\r\n  button:\r\n    \"px-3 py-2 mt-2 font-semibold text-white transition duration-300 ease-in-out bg-blue-700 cursor-pointer rounded-xl hover:bg-blue-300 hover:-translate-y-1\",\r\n};\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"_action\");\r\n  const email = form.get(\"email\");\r\n  const password = form.get(\"password\");\r\n  let firstName = form.get(\"firstName\");\r\n  let lastName = form.get(\"lastName\");\r\n\r\n  if (\r\n    typeof action !== \"string\" ||\r\n    typeof email !== \"string\" ||\r\n    typeof password !== \"string\"\r\n  ) {\r\n    return json({ error: `Invalid Form Data`, form: action }, { status: 400 });\r\n  }\r\n  if (\r\n    action === \"register\" &&\r\n    (typeof firstName !== \"string\" || typeof lastName !== \"string\")\r\n  ) {\r\n    return json({ error: `Invalid Form Data`, form: action }, { status: 400 });\r\n  }\r\n  const errors = {\r\n    email: validateEmail(email),\r\n    password: validatePassword(password),\r\n    ...(action === \"register\"\r\n      ? {\r\n          firstName: validateName((firstName as string) || \"\"),\r\n          lastName: validateName((lastName as string) || \"\"),\r\n        }\r\n      : {}),\r\n  };\r\n\r\n  if (Object.values(errors).some(Boolean))\r\n    return json(\r\n      {\r\n        errors,\r\n        fields: { email, password, firstName, lastName },\r\n        form: action,\r\n      },\r\n      { status: 400 }\r\n    );\r\n  switch (action) {\r\n    case \"login\": {\r\n      return await login({ email, password });\r\n    }\r\n    case \"register\": {\r\n      firstName = firstName as string;\r\n      lastName = lastName as string;\r\n      return await register({ email, password, firstName, lastName });\r\n    }\r\n    default:\r\n      return json({ error: `Invalid Form Data` }, { status: 400 });\r\n  }\r\n};\r\n// export const loader: LoaderFunction = async ({ request }: any) => {\r\n//   // If there's already a user in the session, redirect to the home page\r\n//   return (await getUser(request)) ? redirect(\"/\") : null;\r\n// };\r\n\r\nexport default function Login() {\r\n  const [action, setAction] = useState(\"login\");\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  });\r\n\r\n  const handleInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    field: string\r\n  ) => setFormData((form) => ({ ...form, [field]: event.target.value }));\r\n\r\n  return (\r\n    <Layout>\r\n      <div className='flex flex-col items-center justify-center h-full gap-y-4 '>\r\n        <button\r\n          className={`${styles.button} absolute top-8 right-8`}\r\n          onClick={() => setAction(action == \"login\" ? \"register\" : \"login\")}>\r\n          {action === \"login\" ? \"Sign Up\" : \"Sign In\"}\r\n        </button>\r\n        <h2 className='text-5xl font-extrabold text-blue-700 '>\r\n          Welcome to shareFeedback.\r\n        </h2>\r\n        <p className='font-semibold text-slate-400'>\r\n          {action === \"login\"\r\n            ? \"Login In To Give some praise!\"\r\n            : \"Sign Up To Get Started\"}\r\n        </p>\r\n        <form method='post' className='p-6 bg-blue-100 shadow rounded-2xl w-96'>\r\n          <FormField\r\n            label='Email'\r\n            htmlFor='email'\r\n            value={formData.email}\r\n            onChange={(e) => handleInputChange(e, \"email\")}\r\n          />\r\n          <FormField\r\n            label='password'\r\n            htmlFor='password'\r\n            type='password'\r\n            value={formData.password}\r\n            onChange={(e) => handleInputChange(e, \"password\")}\r\n          />\r\n          {action === \"register\" && (\r\n            <>\r\n              <FormField\r\n                label='FirstName'\r\n                htmlFor='firstName'\r\n                value={formData.firstName}\r\n                onChange={(e) => handleInputChange(e, \"firstName\")}\r\n              />\r\n              <FormField\r\n                label='Last Name'\r\n                htmlFor='lastName'\r\n                value={formData.lastName}\r\n                onChange={(e) => handleInputChange(e, \"lastName\")}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          <div className='w-full text-center'>\r\n            <button\r\n              type='submit'\r\n              name='_action'\r\n              value={action}\r\n              className={styles.button}>\r\n              {action === \"login\" ? \"Sign Up\" : \"Sign In\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n", "interface Iprops {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function Layout({ children }: Iprops) {\r\n  return <div className='w-full h-screen font-mono bg-blue-50'>{children}</div>;\r\n}\r\n", "export const validateEmail = (email: string): string | undefined => {\r\n  var validRegex =\r\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  if (!email.length || !validRegex.test(email)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n};\r\n\r\nexport const validatePassword = (password: string): string | undefined => {\r\n  if (password.length < 5) {\r\n    return \"Please enter a password that is at least 5 characters long\";\r\n  }\r\n};\r\n\r\nexport const validateName = (name: string): string | undefined => {\r\n  if (!name.length) return `Please enter a value`;\r\n};\r\n", "interface FormFieldProps {\r\n  htmlFor: string;\r\n  label: string;\r\n  type?: string;\r\n  value: any;\r\n  onChange?: (...args: any) => any;\r\n}\r\n\r\nexport default function FormField({\r\n  htmlFor,\r\n  label,\r\n  type = \"text\",\r\n  value,\r\n  onChange = () => {},\r\n}: FormFieldProps) {\r\n  return (\r\n    <>\r\n      <label htmlFor={htmlFor} className='font-semibold text-blue-700'>\r\n        {label}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        name={htmlFor}\r\n        id={htmlFor}\r\n        value={value}\r\n        onChange={onChange}\r\n        className='w-full p-2 my-2 rounded-xl'\r\n      />\r\n    </>\r\n  );\r\n}\r\n", "export default {'version':'b3526e78','entry':{'module':'/build/entry.client-DX47A7G2.js','imports':['/build/_shared/chunk-43JUJVKU.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-T4K56RZZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-FRKM63QG.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-PDIUVAVS.js','imports':['/build/_shared/chunk-NXDGLDYE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-2O3R73MU.js','imports':['/build/_shared/chunk-NXDGLDYE.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-B3526E78.js'};", "\nimport * as entryServer from \"D:\\\\code\\\\projects\\\\shareFeadback\\\\shareFeedback\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"D:\\\\code\\\\projects\\\\shareFeadback\\\\shareFeedback\\\\app\\\\root.tsx\";\nimport * as route1 from \"D:\\\\code\\\\projects\\\\shareFeadback\\\\shareFeedback\\\\app\\\\routes\\\\about.tsx\";\nimport * as route2 from \"D:\\\\code\\\\projects\\\\shareFeadback\\\\shareFeedback\\\\app\\\\routes\\\\index.tsx\";\nimport * as route3 from \"D:\\\\code\\\\projects\\\\shareFeadback\\\\shareFeedback\\\\app\\\\routes\\\\login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ACDvB;AAAA;AAAA;AAAA;AACA,mBAA4B;AAC5B,oBAA+B;AAEhB,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAOO;;;;;;AAGA,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAEL,iBAAiB;AACtB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAGtB,eAAe;AAC5B,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,oBAAD,OACA,oCAAC,qBAAD,QAEF,oCAAC,QAAD,MACE,oCAAC,sBAAD,OACA,oCAAC,iCAAD,OACA,oCAAC,uBAAD,OACA,oCAAC,0BAAD;AAAA;;;AC/BR;AAAA;AAAA;AAAA;AAAe,iBAAiB;AAC5B,SAAO,oCAAC,OAAD,MAAK;AAAA;;;ACDhB;AAAA;AAAA;AAAA;AAAA;;;ACCA,kBAA2D;AAC3D,uBAAmB;;;ACFnB,oBAA6B;AAE7B,IAAI;AAKJ,IAAI,OAAuC;AACzC,OAAK,IAAI;AACT,KAAG;AAAA,OACE;AACL,MAAI,CAAC,OAAO,MAAM;AAChB,WAAO,OAAO,IAAI;AAClB,WAAO,KAAK;AAAA;AAEd,OAAK,OAAO;AAAA;;;ACfd,sBAAmB;AAGnB,0BAAiC,MAAoB;AACnD,QAAM,eAAe,MAAM,wBAAO,KAAK,KAAK,UAAU;AACtD,QAAM,UAAU,MAAM,GAAG,KAAK,OAAO;AAAA,IACnC,MAAM;AAAA,MACJ,OAAO,KAAK;AAAA,MACZ,UAAU;AAAA,MACV,SAAS;AAAA,QACP,WAAW,KAAK;AAAA,QAChB,UAAU,KAAK;AAAA;AAAA;AAAA;AAIrB,SAAO,EAAE,IAAI,QAAQ,IAAI,OAAO,KAAK;AAAA;;;AFLvC,IAAM,gBAAgB,QAAQ,IAAI;AAClC,IAAI,CAAC,eAAe;AAClB,QAAM,IAAI,MAAM;AAAA;AAElB,IAAM,UAAU,4CAA2B;AAAA,EACzC,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS,CAAC;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ,KAAK,KAAK,KAAK;AAAA,IACvB,UAAU;AAAA;AAAA;AAId,iCAAwC,QAAgB,YAAoB;AAC1E,QAAM,UAAU,MAAM,QAAQ;AAC9B,UAAQ,IAAI,UAAU;AACtB,SAAO,0BAAS,YAAY;AAAA,IAC1B,SAAS;AAAA,MACP,cAAc,MAAM,QAAQ,cAAc;AAAA;AAAA;AAAA;AAMhD,wBAA+B,MAAoB;AACjD,QAAM,SAAS,MAAM,GAAG,KAAK,MAAM;AAAA,IACjC,OAAO,EAAE,OAAO,KAAK;AAAA;AAEvB,MAAI,QAAQ;AACV,WAAO,sBACL,EAAE,OAAO,yCACT,EAAE,QAAQ;AAAA;AAGd,QAAM,UAAU,MAAM,WAAW;AACjC,MAAI,CAAC,SAAS;AACZ,WAAO,sBACL;AAAA,MACE,OAAO;AAAA,MACP,QAAQ,EAAE,OAAO,KAAK,OAAO,UAAU,KAAK;AAAA,OAE9C,EAAE,QAAQ;AAAA;AAGd,SAAO,kBAAkB,QAAQ,IAAI;AAAA;AAGvC,qBAA4B,EAAE,OAAO,YAAuB;AAC1D,QAAM,OAAO,MAAM,GAAG,KAAK,WAAW;AAAA,IACpC,OAAO,EAAE;AAAA;AAEX,MAAI,CAAC,QAAQ,CAAE,MAAM,yBAAO,QAAQ,UAAU,KAAK,WAAY;AAC7D,WAAO,sBAAK,EAAE,OAAO,qBAAqB,EAAE,QAAQ;AAAA;AAEtD,SAAO,kBAAkB,KAAK,IAAI;AAAA;AAapC,6BACE,SACA,aAAqB,IAAI,IAAI,QAAQ,KAAK,UAC1C;AACA,QAAM,UAAU,MAAM,eAAe;AACrC,QAAM,SAAS,QAAQ,IAAI;AAC3B,MAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AACzC,UAAM,eAAe,IAAI,gBAAgB,CAAC,CAAC,cAAc;AACzD,UAAM,0BAAS,UAAU;AAAA;AAE3B,SAAO;AAAA;AAGT,wBAAwB,SAAkB;AACxC,SAAO,QAAQ,WAAW,QAAQ,QAAQ,IAAI;AAAA;;;AD3FzC,IAAM,SAAyB,OAAO,EAAE,cAAmB;AAChE,QAAM,cAAc;AACpB,SAAO;AAAA;AAEM,gBAAgB;AAC7B,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAkC;AAAA;;;AIVtD;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAqB;AACrB,oBAAyB;;;ACCV,gBAAgB,EAAE,YAAoB;AACnD,SAAO,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAwC;AAAA;;;ACLzD,IAAM,gBAAgB,CAAC,UAAsC;AAClE,MAAI,aACF;AACF,MAAI,CAAC,MAAM,UAAU,CAAC,WAAW,KAAK,QAAQ;AAC5C,WAAO;AAAA;AAAA;AAIJ,IAAM,mBAAmB,CAAC,aAAyC;AACxE,MAAI,SAAS,SAAS,GAAG;AACvB,WAAO;AAAA;AAAA;AAIJ,IAAM,eAAe,CAAC,SAAqC;AAChE,MAAI,CAAC,KAAK;AAAQ,WAAO;AAAA;;;ACPZ,mBAAmB;AAAA,EAChC;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA,WAAW,MAAM;AAAA;AAAA,GACA;AACjB,SACE,0DACE,oCAAC,SAAD;AAAA,IAAO;AAAA,IAAkB,WAAU;AAAA,KAChC,QAEH,oCAAC,SAAD;AAAA,IACE;AAAA,IACA,MAAM;AAAA,IACN,IAAI;AAAA,IACJ;AAAA,IACA;AAAA,IACA,WAAU;AAAA;AAAA;;;AHblB,IAAM,SAAS;AAAA,EACb,QACE;AAAA;AAEG,IAAM,SAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,UAAS,KAAK,IAAI;AACxB,QAAM,QAAQ,KAAK,IAAI;AACvB,QAAM,WAAW,KAAK,IAAI;AAC1B,MAAI,YAAY,KAAK,IAAI;AACzB,MAAI,WAAW,KAAK,IAAI;AAExB,MACE,OAAO,YAAW,YAClB,OAAO,UAAU,YACjB,OAAO,aAAa,UACpB;AACA,WAAO,uBAAK,EAAE,OAAO,qBAAqB,MAAM,WAAU,EAAE,QAAQ;AAAA;AAEtE,MACE,YAAW,cACV,QAAO,cAAc,YAAY,OAAO,aAAa,WACtD;AACA,WAAO,uBAAK,EAAE,OAAO,qBAAqB,MAAM,WAAU,EAAE,QAAQ;AAAA;AAEtE,QAAM,SAAS;AAAA,IACb,OAAO,cAAc;AAAA,IACrB,UAAU,iBAAiB;AAAA,KACvB,YAAW,aACX;AAAA,IACE,WAAW,aAAc,aAAwB;AAAA,IACjD,UAAU,aAAc,YAAuB;AAAA,MAEjD;AAGN,MAAI,OAAO,OAAO,QAAQ,KAAK;AAC7B,WAAO,uBACL;AAAA,MACE;AAAA,MACA,QAAQ,EAAE,OAAO,UAAU,WAAW;AAAA,MACtC,MAAM;AAAA,OAER,EAAE,QAAQ;AAEd,UAAQ;AAAA,SACD,SAAS;AACZ,aAAO,MAAM,MAAM,EAAE,OAAO;AAAA;AAAA,SAEzB,YAAY;AACf,kBAAY;AACZ,iBAAW;AACX,aAAO,MAAM,SAAS,EAAE,OAAO,UAAU,WAAW;AAAA;AAAA;AAGpD,aAAO,uBAAK,EAAE,OAAO,uBAAuB,EAAE,QAAQ;AAAA;AAAA;AAQ7C,iBAAiB;AAC9B,QAAM,CAAC,SAAQ,aAAa,4BAAS;AACrC,QAAM,CAAC,UAAU,eAAe,4BAAS;AAAA,IACvC,OAAO;AAAA,IACP,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA;AAGZ,QAAM,oBAAoB,CACxB,OACA,UACG,YAAY,CAAC,SAAU,iCAAK,OAAL,GAAY,QAAQ,MAAM,OAAO;AAE7D,SACE,oCAAC,QAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,WAAW,GAAG,OAAO;AAAA,IACrB,SAAS,MAAM,UAAU,WAAU,UAAU,aAAa;AAAA,KACzD,YAAW,UAAU,YAAY,YAEpC,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAyC,8BAGvD,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV,YAAW,UACR,kCACA,2BAEN,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,oCAAC,WAAD;AAAA,IACE,OAAM;AAAA,IACN,SAAQ;AAAA,IACR,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,MAExC,oCAAC,WAAD;AAAA,IACE,OAAM;AAAA,IACN,SAAQ;AAAA,IACR,MAAK;AAAA,IACL,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,MAEvC,YAAW,cACV,0DACE,oCAAC,WAAD;AAAA,IACE,OAAM;AAAA,IACN,SAAQ;AAAA,IACR,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,MAExC,oCAAC,WAAD;AAAA,IACE,OAAM;AAAA,IACN,SAAQ;AAAA,IACR,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,OAK5C,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAO;AAAA,IACP,WAAW,OAAO;AAAA,KACjB,YAAW,UAAU,YAAY;AAAA;;;AI/IhD,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,SAAQ,SAAQ,QAAU,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,SAAQ,SAAQ,QAAU,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,CAAC,qCAAoC,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;ACOvuC,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
